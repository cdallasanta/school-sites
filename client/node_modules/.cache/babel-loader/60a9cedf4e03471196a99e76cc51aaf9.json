{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/Chris/Documents/projects/school-sites/client/src/containers/Calendar.js\";\nimport React from 'react';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\nimport 'react-big-calendar/lib/css/react-big-calendar.css'; // Setup the localizer by providing the moment (or globalize) Object\n// to the correct localizer.\n\nconst localizer = momentLocalizer(moment); // or globalizeLocalizer\n\nconst myEventsList = [];\n\nclass CalendarCont extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      events: null\n    };\n  }\n\n  componentDidMount() {\n    // TODO static url right now for testing, probably move this to props? or something\n    fetch(\"http://localhost:3001/api/districts/1/schools/1\").then(resp => resp.json()).then(data => {\n      let events = [];\n      data.events.map(e => {\n        events.push({\n          title: e.title,\n          start: Date.parse(e.start),\n          end: Date.parse(e.end),\n          allDay: e.allDay\n        });\n      });\n      this.setState({\n        events: events\n      }, () => console.log(\"state updated\"));\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      style: {\n        \"height\": \"80vh\",\n        \"margin\": \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(Calendar, {\n      localizer: localizer,\n      events: myEventsList,\n      startAccessor: \"start\",\n      endAccessor: \"end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default CalendarCont;","map":{"version":3,"sources":["/mnt/c/Users/Chris/Documents/projects/school-sites/client/src/containers/Calendar.js"],"names":["React","Calendar","momentLocalizer","moment","localizer","myEventsList","CalendarCont","Component","state","events","componentDidMount","fetch","then","resp","json","data","map","e","push","title","start","Date","parse","end","allDay","setState","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,EAAkBC,eAAlB,QAAwC,oBAAxC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAO,mDAAP,C,CAEA;AACA;;AACA,MAAMC,SAAS,GAAGF,eAAe,CAACC,MAAD,CAAjC,C,CAA0C;;AAC1C,MAAME,YAAY,GAAG,EAArB;;AAEA,MAAMC,YAAN,SAA2BN,KAAK,CAACO,SAAjC,CAA2C;AAAA;AAAA;AAAA,SACzCC,KADyC,GACjC;AACNC,MAAAA,MAAM,EAAE;AADF,KADiC;AAAA;;AAKzCC,EAAAA,iBAAiB,GAAE;AACjB;AACAC,IAAAA,KAAK,mDAAL,CACGC,IADH,CACQC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADhB,EAEGF,IAFH,CAEQG,IAAI,IAAI;AACZ,UAAIN,MAAM,GAAG,EAAb;AACAM,MAAAA,IAAI,CAACN,MAAL,CAAYO,GAAZ,CAAgBC,CAAC,IAAI;AACnBR,QAAAA,MAAM,CAACS,IAAP,CAAY;AACVC,UAAAA,KAAK,EAAEF,CAAC,CAACE,KADC;AAEVC,UAAAA,KAAK,EAAEC,IAAI,CAACC,KAAL,CAAWL,CAAC,CAACG,KAAb,CAFG;AAGVG,UAAAA,GAAG,EAAEF,IAAI,CAACC,KAAL,CAAWL,CAAC,CAACM,GAAb,CAHK;AAIVC,UAAAA,MAAM,EAAEP,CAAC,CAACO;AAJA,SAAZ;AAMD,OAPD;AAQA,WAAKC,QAAL,CAAc;AAAChB,QAAAA,MAAM,EAAEA;AAAT,OAAd,EAAgC,MAAMiB,OAAO,CAACC,GAAR,CAAY,eAAZ,CAAtC;AACD,KAbH;AAcD;;AAEDC,EAAAA,MAAM,GAAE;AACN,WACE;AAAK,MAAA,KAAK,EAAE;AACV,kBAAU,MADA;AAEV,kBAAU;AAFA,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE,oBAAC,QAAD;AACE,MAAA,SAAS,EAAExB,SADb;AAEE,MAAA,MAAM,EAAEC,YAFV;AAGE,MAAA,aAAa,EAAC,OAHhB;AAIE,MAAA,WAAW,EAAC,KAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF;AAaD;;AArCwC;;AAwC3C,eAAeC,YAAf","sourcesContent":["import React from 'react';\r\nimport {Calendar, momentLocalizer} from 'react-big-calendar'\r\nimport moment from 'moment';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\n\r\n// Setup the localizer by providing the moment (or globalize) Object\r\n// to the correct localizer.\r\nconst localizer = momentLocalizer(moment) // or globalizeLocalizer\r\nconst myEventsList = []\r\n\r\nclass CalendarCont extends React.Component {\r\n  state = {\r\n    events: null\r\n  }\r\n  \r\n  componentDidMount(){\r\n    // TODO static url right now for testing, probably move this to props? or something\r\n    fetch(`http://localhost:3001/api/districts/1/schools/1`)\r\n      .then(resp => resp.json())\r\n      .then(data => {\r\n        let events = []\r\n        data.events.map(e => {\r\n          events.push({\r\n            title: e.title,\r\n            start: Date.parse(e.start),\r\n            end: Date.parse(e.end),\r\n            allDay: e.allDay\r\n          })\r\n        })\r\n        this.setState({events: events}, () => console.log(\"state updated\"));\r\n      })\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div style={{\r\n        \"height\": \"80vh\",\r\n        \"margin\": \"20px\"}}>\r\n  \r\n        <Calendar\r\n          localizer={localizer}\r\n          events={myEventsList}\r\n          startAccessor=\"start\"\r\n          endAccessor=\"end\"\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CalendarCont;"]},"metadata":{},"sourceType":"module"}