{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/Chris/Documents/projects/school-sites/client/src/components/Login.js\";\nimport React from 'react';\nimport $ from 'jquery';\nimport '../stylesheets/login.scss';\nexport default class Login extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: \"test12ple.com\",\n      password: \"password\",\n      errors: []\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleLogin = e => {\n      e.preventDefault();\n      $(\"login-errors\").empty();\n      $.ajax({\n        type: 'POST',\n        url: 'http://localhost:3001/auth/sign_in',\n        data: {\n          email: this.state.email,\n          password: this.state.password\n        },\n        success: (response, status, jqXHR) => {\n          sessionStorage.setItem('user', JSON.stringify({\n            'access-token': jqXHR.getResponseHeader('access-token'),\n            client: jqXHR.getResponseHeader('client'),\n            uid: response.data.uid\n          })); // use headers: JSON.parse(sessionStorage.user) in ajax calls to api\n\n          this.props.history.push('/');\n        },\n        error: resp => {\n          this.setState({\n            errors: resp.responseJSON.errors\n          });\n        }\n      });\n    };\n\n    this.renderErrors = () => {\n      debugger;\n      return React.createElement(\"div\", {\n        id: \"login-errors\",\n        className: \"errors\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, this.state.errors.map(error => {\n        return React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, \"$\", error);\n      }));\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Sign in\"), this.state.errors.length > 0 ? this.renderErrors() : null, React.createElement(\"form\", {\n      onSubmit: this.handleLogin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"email\",\n      value: this.state.email,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      name: \"password\",\n      type: \"password\",\n      value: this.state.password,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/mnt/c/Users/Chris/Documents/projects/school-sites/client/src/components/Login.js"],"names":["React","$","Login","Component","state","email","password","errors","handleChange","e","setState","target","name","value","handleLogin","preventDefault","empty","ajax","type","url","data","success","response","status","jqXHR","sessionStorage","setItem","JSON","stringify","getResponseHeader","client","uid","props","history","push","error","resp","responseJSON","renderErrors","map","render","length"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport $ from 'jquery';\r\nimport '../stylesheets/login.scss';\r\n\r\nexport default class Login extends React.Component {\r\n  state = {\r\n    email: \"test12ple.com\",\r\n    password: \"password\",\r\n    errors: []\r\n  }\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  handleLogin = (e) => {\r\n    e.preventDefault();\r\n    $(\"login-errors\").empty();\r\n\r\n    $.ajax({\r\n      type: 'POST',\r\n      url: 'http://localhost:3001/auth/sign_in',\r\n      data: {\r\n        email: this.state.email,\r\n        password: this.state.password\r\n      },\r\n      success: (response, status, jqXHR) => {\r\n        sessionStorage.setItem('user',\r\n          JSON.stringify({\r\n            'access-token': jqXHR.getResponseHeader('access-token'),\r\n            client: jqXHR.getResponseHeader('client'),\r\n            uid: response.data.uid\r\n          })\r\n        );\r\n  // use headers: JSON.parse(sessionStorage.user) in ajax calls to api\r\n        this.props.history.push('/');\r\n      },\r\n      error: resp => {\r\n        this.setState({errors: resp.responseJSON.errors})\r\n      }\r\n    })\r\n  }\r\n\r\n  renderErrors = () => {\r\n    debugger;\r\n    return (\r\n      <div id=\"login-errors\" className=\"errors\">\r\n        {\r\n          this.state.errors.map(error => {\r\n            return <li>${error}</li>\r\n          })\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div>\r\n        <h2>Sign in</h2>\r\n        {this.state.errors.length > 0 ? this.renderErrors() : null}\r\n        <form onSubmit={this.handleLogin} >\r\n          <input name=\"email\" value={this.state.email} onChange={this.handleChange} />\r\n          <input name=\"password\" type=\"password\" value={this.state.password} onChange={this.handleChange} />\r\n          <input type=\"submit\"/>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}