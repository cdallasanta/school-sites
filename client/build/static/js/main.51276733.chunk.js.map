{"version":3,"sources":["components/SchoolSelector.js","components/NavigationMenu.js","components/ContactInfo.js","components/Ad.js","components/Footer.js","components/Blog.js","containers/BlogList.js","components/Event.js","containers/EventsList.js","containers/SchoolContainer.js","containers/DistrictContainer.js","oldCalendar/Calendar.js","components/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["SchoolSelector","props","handleChange","e","setState","target","name","value","schoolsForSelect","state","schools","filter","s","grade_level","map","school","i","id","key","handleSubmit","preventDefault","school_id","history","push","dist_id","dropdownForm","htmlFor","onChange","type","onClick","prevProps","this","fetch","then","resp","json","data","React","Component","NavigationMenu","to","district_id","className","content","document","getElementById","style","maxHeight","scrollHeight","phone","address","href","homepage_url","ContactInfo","contact","src","avatar_url","alt","email","Ad","size","Footer","Blog","blog","title","BlogList","blogs","b","Event","event","eventStart","Date","start","shortMonth","toLocaleString","month","longMonth","dateNumber","getDate","dateString","weekday","EventsList","events","SchoolContainer","school_data","site_rep","district","match","params","DistrictContainer","district_data","loadedResponse","localizer","momentLocalizer","moment","CalendarCont","parse","end","allDay","console","log","startAccessor","endAccessor","NotFound","textAlign","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.51276733.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../stylesheets/selector.scss'\r\n\r\nclass SchoolSelector extends React.Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      schools: props.schools,\r\n      grade_level: \"\",\r\n      school_id: \"\"\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.dist_id !== prevProps.dist_id){\r\n      const dist_id = this.props.dist_id\r\n      fetch(`http://localhost:3001/api/districts/${dist_id}/schools`)\r\n        .then(resp => resp.json())\r\n        .then(data => {\r\n          this.setState({schools: data});\r\n        })\r\n    }\r\n  }\r\n\r\n  handleChange = e => {\r\n    this.setState({[e.target.name]: e.target.value})\r\n  }\r\n\r\n  schoolsForSelect = () => {\r\n    const schools = this.state.schools.filter(s => s.grade_level === this.state.grade_level)\r\n\r\n    return schools.map((school, i) => {\r\n      return <option value={school.id} key={i}>{school.name}</option>\r\n    })\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (this.state.school_id){\r\n      this.props.history.push(`/districts/${this.props.dist_id}/schools/${this.state.school_id}`)\r\n    }\r\n  }\r\n\r\n  dropdownForm = () => {\r\n    return (\r\n      <form id=\"school-selector\">\r\n        <div>\r\n          <label htmlFor=\"grade_level\">Select grade level: </label>\r\n          <select value={this.state.grade_level} onChange={this.handleChange} name=\"grade_level\">\r\n            <option value=\"\"></option>\r\n            <option value=\"elementary\">Elementary</option>\r\n            <option value=\"k-8\">K-8</option>\r\n            <option value=\"middle\">Middle</option>\r\n            <option value=\"high\">High</option>\r\n          </select>\r\n        </div>\r\n\r\n        {this.state.grade_level !== \"\" ?\r\n          <div>\r\n            <label htmlFor=\"school_id\">Select your school: </label>\r\n            <select value={this.state.school_id} onChange={this.handleChange} name=\"school_id\">\r\n              <option value=\"\"></option>\r\n              {this.schoolsForSelect()}\r\n            </select>\r\n          </div>\r\n          :\r\n          null\r\n        }\r\n\r\n        <input type=\"submit\" value=\"Select School\" onClick={e=>this.handleSubmit(e)} />\r\n      </form>\r\n    )\r\n  }\r\n\r\n  render(){    \r\n    return (\r\n      this.dropdownForm()\r\n    )\r\n  }\r\n}\r\n\r\nexport default SchoolSelector;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst NavigationMenu = props => {\r\n  function toggleContact() {\r\n    const content = document.getElementById(\"nav-contact\")\r\n    if (content.style.maxHeight){\r\n      content.style.maxHeight = null;\r\n    } else {\r\n      content.style.maxHeight = content.scrollHeight + \"px\";\r\n    } \r\n  }\r\n\r\n  return(\r\n    <div id=\"navMenu\">\r\n      <Link to={`/districts/${props.district_id}`}>District Page</Link><br />\r\n      <Link to={`/districts/${props.district_id}/calendar`}>District Calendar</Link><br />\r\n      <button \r\n        type=\"button\"\r\n        className=\"link-button\"\r\n        onClick={toggleContact}>\r\n          School Info\r\n        </button><br />\r\n      <div id=\"nav-contact\" className=\"collapsible collapsed\">\r\n        <strong>Phone: </strong>{props.school.phone}<br />\r\n        <strong>Address: </strong>{props.school.address}<br />\r\n        <a href={props.school.homepage_url} target=\"_\">Homepage</a>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NavigationMenu;","import React from 'react';\r\n\r\nconst ContactInfo = ({contact}) => {\r\n  function renderContact() {\r\n    if (contact){\r\n      return contactDiv();\r\n    } else {\r\n      return noContactDiv();\r\n    }\r\n  }\r\n\r\n  function contactDiv() {\r\n    return (\r\n      <div id=\"contact-div\">\r\n        <img src={contact.avatar_url} alt=\"rep-avatar\" />\r\n        <div id=\"contact-info\">\r\n          <strong>Rep Name:</strong> {contact.name}<br />\r\n          <strong>Rep Email:</strong> {contact.email}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  function noContactDiv() {\r\n    return (\r\n      <div>\r\n        There is no site representative for this site. Claim it here!\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return(\r\n    renderContact()\r\n  )\r\n}\r\n\r\nexport default ContactInfo;","import React from 'react';\r\n\r\nconst Ad = ({size}) => {\r\n  return(\r\n    <div className={`chunk ${size}-chunk`}>\r\n      {size} Ad\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Ad;","import React from 'react';\r\n\r\nconst Footer = props => {\r\n  return (\r\n    <div id=\"footer\">Footer</div>\r\n  )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nconst Blog = ({blog}) => {\r\n  return (\r\n    <div className=\"blog-card\">\r\n      <div className=\"blog-title\">\r\n        {blog.title}\r\n      </div>\r\n      <div className=\"blog-teaser\">\r\n        {blog.content}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Blog;","import React from 'react';\r\nimport Blog from '../components/Blog'\r\nimport '../stylesheets/blogs.scss'\r\n\r\nconst BlogList = ({blogs}) => {\r\n  function renderBlogs() {\r\n    return blogs.map((b, i) => {\r\n      return <Blog blog={b} key={i} />\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div id=\"blogs-section\">\r\n      <h3>Blogs</h3>\r\n      <div id=\"blogs-div\">\r\n        {renderBlogs()}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BlogList;","import React from 'react';\r\n\r\nconst Event = ({event}) => {\r\n  const eventStart = new Date(event.start);\r\n  const shortMonth = eventStart.toLocaleString('default', { month: 'short' });\r\n  const longMonth = eventStart.toLocaleString('default', { month: 'long' });\r\n  const dateNumber = eventStart.getDate()\r\n  const dateString = eventStart.toLocaleString('default', { weekday: 'long' })\r\n\r\n  return (\r\n    <div className=\"event-card\">\r\n      <div className=\"event-big-date\">\r\n        <div className=\"month\">\r\n          {shortMonth}\r\n        </div>\r\n        <div className=\"date\">\r\n          {dateNumber}\r\n        </div>\r\n      </div>\r\n      <div className=\"event-details\">\r\n        <div className=\"event-title\">\r\n          {event.title}\r\n        </div>\r\n        <div className=\"event-full-date\">\r\n          {dateString}, {longMonth} {dateNumber}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Event;","import React from 'react';\r\nimport Event from '../components/Event';\r\nimport '../stylesheets/events.scss'\r\n\r\nconst EventsList = ({events}) => {\r\n  function renderEvents() {\r\n    return events.map((e, i) => {\r\n      return <Event event={e} key={i} />\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div id=\"events-section\">\r\n      <h3>Events</h3>\r\n      <div id=\"events-div\">\r\n        {renderEvents()}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EventsList;","import React from 'react';\r\nimport NavigationMenu from '../components/NavigationMenu';\r\nimport ContactInfo from '../components/ContactInfo';\r\nimport Ad from '../components/Ad';\r\nimport Footer from '../components/Footer';\r\nimport BlogList from '../containers/BlogList';\r\nimport EventsList from '../containers/EventsList';\r\nimport SchoolSelector from '../components/SchoolSelector';\r\n\r\nclass SchoolContainer extends React.Component {\r\n  state = {\r\n    school_data: {\r\n      name: \"\",\r\n      blogs: [],\r\n      events: [],\r\n      site_rep: \"\",\r\n      district: {id:\"\"}\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    const dist_id = this.props.match.params.dist_id\r\n    const school_id = this.props.match.params.school_id\r\n    fetch(`/api/districts/${dist_id}/schools/${school_id}`)\r\n      .then(resp => resp.json())\r\n      .then(data => {\r\n        this.setState({school_data: data});\r\n      })\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.match.params.school_id !== prevProps.match.params.school_id) {\r\n      const dist_id = this.props.match.params.dist_id\r\n      const school_id = this.props.match.params.school_id\r\n      fetch(`http://localhost:3001/api/districts/${dist_id}/schools/${school_id}`)\r\n        .then(resp => resp.json())\r\n        .then(data => {\r\n          this.setState({school_data: data});\r\n        })\r\n    }\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div id=\"school-page\">\r\n        <header id=\"header\">\r\n          <h1>{this.state.school_data.name}</h1>\r\n          <ContactInfo contact={this.state.school_data.site_rep} />\r\n          <Ad size=\"banner\" />\r\n        </header>\r\n        <div id=\"sidebar\">\r\n          <NavigationMenu\r\n            school={this.state.school_data}\r\n            district_id={this.state.school_data.district.id} />\r\n          <SchoolSelector schools={this.state.school_data.district.schools} dist_id={this.state.school_data.district.id} history={this.props.history}/>\r\n          <Ad size=\"panel\" />\r\n          <Ad size=\"panel\" />\r\n        </div>\r\n        <BlogList blogs={this.state.school_data.blogs} />\r\n        <EventsList events={this.state.school_data.events} />\r\n        <Footer />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SchoolContainer;","import React from 'react';\r\nimport Ad from '../components/Ad';\r\nimport Footer from '../components/Footer';\r\nimport BlogList from '../containers/BlogList';\r\nimport EventsList from '../containers/EventsList';\r\nimport SchoolSelector from '../components/SchoolSelector';\r\n\r\nclass DistrictContainer extends React.Component {\r\n  state = {\r\n    district_data: null\r\n  }\r\n\r\n  componentDidMount(){\r\n    const district_id = this.props.match.params.dist_id\r\n    fetch(`/api/districts/${district_id}`)\r\n      .then(resp => resp.json())\r\n      .then(data => {\r\n        this.setState({district_data: data});\r\n      })\r\n  }\r\n\r\n  loadedResponse = () => {\r\n    if (!this.state.district_data){\r\n      return \"Loading District data\"\r\n    } else {\r\n      return (\r\n        <div id=\"district-page\">\r\n          <header id=\"header\">\r\n            <h1>{this.state.district_data.name}</h1>\r\n            <Ad size=\"banner\" />\r\n          </header>\r\n          <div id=\"sidebar\">\r\n            <SchoolSelector schools={this.state.district_data.schools} dist_id={this.state.district_data.id} history={this.props.history}/>\r\n            <Ad size=\"panel\" />\r\n            <Ad size=\"panel\" />\r\n          </div>\r\n          <BlogList blogs={this.state.district_data.blogs} />\r\n          <EventsList events={this.state.district_data.events} />\r\n          <Footer />\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      this.loadedResponse()\r\n    )\r\n  }\r\n}\r\n\r\nexport default DistrictContainer;","import React from 'react';\r\nimport {Calendar, momentLocalizer} from 'react-big-calendar'\r\nimport moment from 'moment';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\n\r\n// Setup the localizer by providing the moment (or globalize) Object\r\n// to the correct localizer.\r\nconst localizer = momentLocalizer(moment) // or globalizeLocalizer\r\n\r\nclass CalendarCont extends React.Component {\r\n  state = {\r\n    events: []\r\n  }\r\n  \r\n  componentDidMount(){\r\n    // TODO static url right now for testing, probably move this to props? or something\r\n    fetch(`http://localhost:3001/api/districts/1/schools/1`)\r\n      .then(resp => resp.json())\r\n      .then(data => {\r\n        let events = []\r\n        data.events.map(e => {\r\n          return events.push({\r\n            title: e.title,\r\n            start: new Date(Date.parse(e.start)),\r\n            end: new Date(Date.parse(e.end)),\r\n            allDay: e.allDay\r\n          })\r\n        })\r\n        this.setState({events: events}, () => console.log(\"state updated\"));\r\n      })\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div style={{\r\n        \"height\": \"80vh\",\r\n        \"margin\": \"20px\"}}>\r\n  \r\n        <Calendar\r\n          localizer={localizer}\r\n          events={this.state.events}\r\n          startAccessor=\"start\"\r\n          endAccessor=\"end\"\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CalendarCont;","import React, { Component } from 'react'\r\n\r\nclass NotFound extends Component {\r\n  render () {\r\n    return <div textAlign='center'>\r\n      <h1>404: Not found</h1>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default NotFound","import React from 'react';\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport SchoolSelector from './components/SchoolSelector';\nimport SchoolContainer from './containers/SchoolContainer';\nimport DistrictContainer from './containers/DistrictContainer';\nimport CalendarCont from './oldCalendar/Calendar';\nimport NotFound from './components/NotFound';\n\nclass App extends React.Component {\n  render(){\n    return (\n      <div className=\"App\">\n        <BrowserRouter>\n          <Switch>\n            <Route exact path=\"/\" component={SchoolSelector} />\n            <Route exact path=\"/districts/:dist_id/selector\" component={SchoolSelector} />\n            <Route exact path=\"/districts/:dist_id/schools/:school_id\" component={SchoolContainer} />\n            <Route exact path=\"/districts/:dist_id\" component={DistrictContainer} />\n            <Route exact path=\"/districts/:dist_id/calendar\" component={CalendarCont} />\n            \n            <Route component={NotFound} />\n          </Switch>\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './stylesheets/index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}